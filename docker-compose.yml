version: '3'

services:
  notification-db:
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: statusmonitordb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5

  health-check-db:
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: statusmonitordb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5

  endpoint-db:
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: statusmonitordb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5

  redis:
    image: redis:7.0.15
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.8.11-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10

  notification:
    build: ./notification
    image: status-monitor/notification
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - "8080:8080"
    depends_on:
      notification-db:
        condition: service_healthy

  endpoint:
    build: ./endpoint
    image: status-monitor/endpoint
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - "8080:8080"
    depends_on:
      endpoint-db:
        condition: service_healthy

  health-check:
    build: ./health-check
    image: status-monitor/health-check
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - "8080:8080"
    depends_on:
      health-check-db:
        condition: service_healthy

volumes:
  notification-data:
  health-check-data:
  endpoint-data:
  rabbit-data:
